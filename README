******************************************************************************************
		UMDuluth-Team-ROME-Cluster words based on context
******************************************************************************************



Contents of the Directory:

1.runit.sh
2.install.sh
3.main.py
4.XMLParser.py
5.ClusterSentences.py
6.SenseDef.py
7.XMLWrite.py
8.KeyWrite.py
9.README
10.BASELINES
11.Input
 	


12.Output


13.SenseClusterScorer

--------
PROBLEM 
--------

This section gives details about the problem at hand:

The problem for this project is to create a dictionary from input raw text. 
The input for the system will be some instances (sentences), containing the 
target word, whose meaning has to be determined. The system created as a 
solution must cluster the input instances into N clusters, where N is 
automatically selected by the system. Also the system should give a meaning 
to each of these automatically created clusters and pick an example from the
input instances for each of these clusters. The system should only use the 
input instances containing the target word, along with some random text from
any corpus if needed.

The input file to the system is an xml in senseval 2 format. There are 2 
kinds of input xml files: one is for a POS (parts of speech) file i.e a file
with verb or noun (one words) as the target word and the other is a 
nameconflate xml input file which has two target words conflated into one 
word. By a POS file we mean file containing only one target word either noun 
or verb, and is used throughout the documentation. The system should 
automatically cluster them into different cluster and give a meaning and 
also pick an example for each cluster.

---------------------------
SOLUTION - BASELINE SYSTEM
---------------------------

This section gives details about the solution used in the system:

The main idea behind the baseline system, is that words with same 
sense in different instances (sentences), have similar context i.e 
similar words around the target word. The program picks up the first 
sentence yet to be clustered and identify words around the target 
word (also called feature words throughout the code and 
documentation) and then it looks, for these feature words in all the 
sentences and if it matches words in the sentence yet to be clustered
it assigns them to the same cluster. It keeps on doing that till all
the sentences become a part of some cluster. Finally there will be 
a few remaining sentences that don't have any common feature words, 
we assign all of them to a final cluster. 

-----------------------
HOW TO RUN THE PROGRAM
-----------------------

This section gives details about how to run the program:

1) Open Terminal
2) Navigate to the location of the UMDuluth-CS8761-Rome folder.
3) To run the project, runit.sh script should be used. 
4) The runit.sh script has few variables to setup before 
   executing the script on terminal
5) INPUTFILE variable takes in the location of the input senseval-2
   format xml file.
6) The next variables are TARGET_WORD1 and TARGET_WORD2 need to
   be specified based on the input file
7) If the input file is POS file then only TARGET_WORD1 variable
   needs to be setup and TARGET_WORD2 needs to be commented or just 
   put an # before TARGET_WORD2 variable
8) If the input file is Name conflate file then both TARGET_WORD1 
   and TARGET_WORD2 needs to be setup with out them being commented.
9) The next variable is OUTPUTFILE, which stores the location 
   and name of the output xml file 
10) The next variable is to setup the location of senseclusters_scorer 
    program and the name of the variable is SENSE_CLUSTERS_SCORER_LOCATION,
    by default it is set to something and the tar file has the 
    sense_cluster_scorer program, so there is no need to change it.
11) To run the main.py python script there are  different command line arguments.
    If running for single word input file use the line 23 in runit.sh,
    but if running for name conflate input files with two words comment 
    line 23 with # and remove # from line 24   and use it.

------------------
INPUT FILE FORMAT 
------------------

The Primary input for the program is Senseval-2 file format file. 
Three different xml files created by each individual of the team are :
1. A two words, name-conflate pair xml file.
2. A word with POS as Noun xml file.
3. A word with POS as Verb xml file.

Example format for name-conflate pair xml file :
-----------------------------------------------
 <?xml version="1.0" encoding="iso-8859-1" ?>
 <corpus lang='english'>

 <lexelt item="p_h">

 <instance id="1">
 <answer instance="1" senseid="priest"/>
 <context>
  at the valley of Shaveh, which is the king's dale. 14:18 And 
  Melchizedek king of Salem brought forth bread and wine: and 
  he was the  <head>p_h</head> of the most high God.  14:19 
  And he blessed him, and said, Blessed be Abram of the most high 
  God, possessor of     heaven and earth: 
 </context>
 </instance>
 </lexelt>
 </corpus>

Example format for word with POS file :
---------------------------------------
 <?xml version="1.0" encoding="iso-8859-1" ?>
 <corpus lang='english'>

 <lexelt item="G">

 <instance id="1">
 <answer instance="1" senseid="Supreme_Power"/>
 <context>
 In the beginning <head>God</head> created the heaven and the earth.
 And the earth was without form, and void; and darkness was upon 
 the face of the deep. And the 
 </context>
 </instance>
 </lexelt>
 </corpus>


-------------------
OUTPUT FILE FORMAT
-------------------


Four different types of Output files will be generated by this system
1.Output xml file: Our algorithm clusters the instances and gives these
  instances in output xml file, which will be in Senseval-2 format. 
  The name of the this file depends on the  file name specified in the 
  runit.sh script.

Example: 
--------
<corpus lang="english">
<lexelt item="LEXELT">
<instance id="0"><answer instance="0" senseid="1"/>
<context>
It was very lucky , for I would not have had poor James think himself 
slighted upon any account ; and I am sure she will make a very good 
servant : she is a civil , pretty - spoken girl ; I have a great 
opinion of her . Whenever I see her , she always curtseys and asks 
me how I do , in a very pretty <head>manner</head> ; and when you 
have had her here to do needlework , I observe she always turns 
the lock of the door the right way and never bangs it .
</context>
</instance>
<instance id="1"><answer instance="1" senseid="2"/>
<context>
He had returned to a late dinner , after some days ' absence , 
and now walked up to Hartfield to say that all were well in Brunswick 
Square . It was a happy circumstance , and animated Mr . Woodhouse for
some time . Mr . Knightley had a cheerful <head>manner</head> , which
always did him good ; and his many inquiries after " poor Isabella "
and her children were answered most satisfactorily . When this was 
over , Mr . Woodhouse gratefully observed , " It is very kind of you ,
Mr . Knightley , to come out at this late hour to call upon us .
</context>
</instance>

2.Output text file: It contains a definition and an example for 
each sense of the target word. The name of this file will be in 
the format as word-definition.text

Example: 
--------
Definition and Examples for manner

Example :
It was very lucky , for I would not have had poor James think 
himself slighted upon any account ; and I am sure she will make
a very good servant : she is a civil , pretty - spoken girl ; 
I have a great opinion of her . Whenever I see her , she always 
curtseys and asks me how I do , in a very pretty <head>manner</head>
; and when you have had her here to do needlework , I observe she 
always turns the lock of the door the right way and never bangs it .

Definition is:['always', 'observe', 'spirits', 'question']

Example:
He drank and put down the glass with a composed face ; but his
hand had started at the exact moment when he became conscious
of a face looking in through the garden window just behind 
the Admiral -- the face of a woman , swarthy , with southern 
hair and eyes , and young , but like a mask of tragedy . 
After a pause the priest spoke again in his mild 
<head>manner</head> . " Admiral ," he said , " will you do me
a favour ? Let me , and my friends if they like , stop in that
tower of yours just for tonight ?

Definition is:['spoke', 'Emma', 'favour', 'said']

3.Output Key file: It is generated from the output xml file. 
It acts as input to the Sensecluster Scrorer program.

Example:
--------
believe believe.0 believe.1
believe believe.1 believe.1
believe believe.2 believe.1
believe believe.3 believe.1
believe believe.4 believe.1
believe believe.5 believe.1

4.Input Key file: It is generated from the input xml file. 
It acts as input to the Sensecluster Scorer Program.

Example:
--------
believe believe.0 believe.1
believe believe.1 believe.1
believe believe.2 believe.1
believe believe.3 believe.1
believe believe.4 believe.1
believe believe.5 believe.1

--------------
CONTRIBUTIONS
--------------

Vamsidhar Kasireddy:

Primary author of sensedef.py and main.py. Also contributed 
in the coming up with a solution of the baseline system. 
Author of the HOW TO RUN section of this README.

Preethi Chimerla:

Primary author of keywrite.py, xmlwrite.py and install.sh. 
Also contributed in the coming up with a solution of the baseline
 system. Author of the INPUT FILE and OUTPUT FILE FORMAT sections of this README.

Nirav Sharda:

Primary author of XMLParser.py and runit.sh. Also contributed
in the coming up with a solution of the baseline system. 
Author of the PROBLEM and SOLUTION sections of this README.
