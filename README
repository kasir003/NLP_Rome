--------
PROBLEM 
--------

This section gives details about the problem at hand:

The problem for this project is to create a dictionary from input raw text. The input for the system will be some instances (sentences), containing the target word, whose meaning has to be determined. The system created as a solution must cluster the input instances into N clusters, where N is automatically selected by the system. Also the system should give a meaning to each of these automatically created clusters and pick an example from the input instances for each of these clusters. The system should only use the input instances containing the target word, along with some random text from any corpus if needed.

---------------------------
SOLUTION - BASELINE SYSTEM
---------------------------

This section gives details about the solution used in the system:

The main idea behind the baseline system, is that words with same sense in different instances (sentences), have similar context i.e similar words around the target word. The program picks up the first sentence yet to be clustered and identify words around the target word (also called feature words throughout the code and documentation) and then it looks, for these feature words in all the sentences and if it matches words in the sentence yet to be clustered it assigns them to the same cluster. It keeps on doing that till all the sentences become a part of some cluster. Finally there will be a few remaining sentences that don't have any common feature words, we assign all of them to a final cluster. 

-----------------------
HOW TO RUN THE PROGRAM
-----------------------

This section gives details about how to run the program:

1) Open Terminal
2) Navigate to the location of the UMDuluth-CS8761-Rome folder.
3) To run the project, runit.sh script should be used. 
4) The runit.sh script has few variables to setup before executing the script on terminal
5) INPUTFILE variable takes in the location of the input senseval-2 format xml file.
6) The next variables are TARGET_WORD1 and TARGET_WORD2 need to be specified based on the input file
7) If the input file is POS file then only TARGET_WORD1 variable needs to be setup and TARGET_WORD2 needs to be commented or just put an # before TARGET_WORD2 variable
8) If the input file is Name conflate file then both TARGET_WORD1 and TARGET_WORD2 needs to be setup with out them being commented.
9) The next variable is OUTPUTFILE, which stores the location and name of the output xml file 
10) The next variable is to setup the location of senseclusters_scorer program and the name of the variable is SENSE_CLUSTERS_SCORER_LOCATION,by default it is set to something and the tar file has the sense_cluster_scorer program, so there is no need to change it.
11)To run the main.py python script there are two modes.
   If running for single word input file use the line 23 in runit.sh, but if running for            name conflate input files with two words comment line 23 with # and remove # from line 24   and use it.




------------------
INPUT FILE FORMAT 
------------------



-------------------
OUTPUT FILE FORMAT
-------------------



--------------
CONTRIBUTIONS
--------------

Vamsidhar Kasireddy:

Primary author of sensedef.py and main.py. Also contributed in the coming up with a solution of the baseline system. Author of the HOW TO RUN section of this README.

Preethi Chimerla:

Primary author of keywrite.py, xmlwrite.py and install.sh. Also contributed in the coming up with a solution of the baseline system. Author of the INPUT FILE and OUTPUT FILE FORMAT sections of this README.

Nirav Sharda:

Primary author of XMLParser.py and runit.sh. Also contributed in the coming up with a solution of the baseline system. Author of the PROBLEM and SOLUTION sections of this README.
